@startuml
class Student {
    + username: str
    - password: str
    + firstname : str
    + lastname : str
    + batch : Batch
    + subjects_enrolled : List[Subject]
    # marks: Dict[Subject : Dict[Test : float]]
    # attendance: Dict[Subject : float]
    # assignments: Dict[Subject : list[Assignment]]
    + getpassword()
    + view_marks()
    + view_attendance()
    + view_assignments()
    + submit_assignment(assignment: Assignment)
    + access_all_tests(subject: Subject)
    + access_test_results(test: Test)
}

class Teacher {
    - username: str
    - password: str
    + firstname: str
    + lastname: str
    + assign_assignment_to_class(batch: Batch, subject: Subject, assignment: Assignment)
    + update_student_marks(student: Student, test: Test)
    + access_test_results(batch: Batch, test: Test)
}

class Subject {
    + name: str
}

class Batch {
    + name: str
    + students: list[Student]
    + subjects: set[Subject]
    + add_student(student: Student)
    + add_subject(subject: Subject)
}

class Assignment {
    + name: str
    + due_date: date
    + subject: Subject
    + submitted : bool
    + assign_to_batch(subject: Subject, batch: Batch)
}

class Test {
    + name : str
    + subject: Subject
    - marks: dict[Student, int]
}

class ClassroomInteraction {
    + update_student_marks(student_username : str, test: Test, marks: list[int])
    + assign_assignment_to_student(student_username: str, assignment: Assignment)
    + view_assignments(student_username: str)
}

class Database {
    - students_table: Dict[username: Dict[password: str, teacher: Teacher]]
    - teachers_table: Dict[username: Dict[password: str, student: Student]]
    - batches_table: Dict[batch_name: Batch]
    + add_student(student: Student)
    + add_teacher(teacher: Teacher)
    + add_batch(batch: Batch)
    + update_student(student_username: int, new_student_data)
    + update_teacher(teacher_username: int, new_teacher_data)
    + update_batch(batch_name: str, Students : list[Student], Subjects : set[Subject])
    + save()
    + load()
}

Student "1" --> "0..*" Teacher : enrolled_in
Student "1" --> "1" Database : uses
Teacher "1" --> "1" Database : uses
Student "1" --> "*" Subject : enrolled_in
Batch "*" --> "1" Teacher : taught_by
Batch "*" --> "*" Student : has_students
Batch "*" --> "*" Subject : subjects
Assignment "1" --> "1" Subject : belongs_to
Assignment "1" --> "1" Batch : assigned_to
Test "1" --> "1" Subject : linked_via
Test "*" --> "*" Student : marks_of
ClassroomInteraction "*" --> "*" Teacher : interacts_with <<updates_credentials>>
ClassroomInteraction "*" --> "*" Student : interacts_with
@enduml